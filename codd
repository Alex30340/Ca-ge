import React, { useMemo, useState } from "react"; import { motion } from "framer-motion"; import { Globe, Rocket, ClipboardList, Code, Wrench, LineChart, Check, Mail, Phone, Sun, Moon, Shield, Blocks, Languages, ArrowRight, ExternalLink } from "lucide-react";

// ============================================= // CA Gestion — Site vitrine complet (one-file) // ============================================= // Services: Création de site • Développement d'activité • Gestion administrative // Stack: React + Tailwind + Framer Motion + lucide-react // Notes: // - Compatible Vite / CRA / Next (en tant que composant client) // - Ajoutez Tailwind dans votre projet pour le style // - Remplacez les coordonnées et intégrez votre backend pour le formulaire // - Palette sobre, accent bleu pro

const BRAND = { name: "CA Gestion", email: "contact@cagestion.fr", phone: "06 00 00 00 00", tagline: "Solutions numériques & administratives pour petites entreprises.", };

const Section = ({ id, children, className = "" }) => (

  <section id={id} className={`max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 ${className}`}>
    {children}
  </section>
);const Card = ({ children, className = "" }) => (

  <div className={`rounded-2xl shadow-sm ring-1 ring-black/5 bg-white dark:bg-zinc-900 ${className}`}>{children}</div>
);const Pill = ({ icon: Icon, children, tone = "default" }) => ( <span className={ "inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-medium " + (tone === "blue" ? "bg-blue-50 text-blue-700 ring-1 ring-blue-100 dark:bg-blue-950/50 dark:text-blue-200 dark:ring-blue-900/30" : "bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-300") }

> 

{Icon && <Icon size={14} />} {children}

  </span>
);const features = [ { icon: Code, title: "Création de site", desc: "Sites vitrines, landing pages, SEO technique et contenu orienté conversion.", bullets: ["Design responsive", "Optimisation SEO", "Hébergement & domaine"], }, { icon: Rocket, title: "Développement d'activité", desc: "Offres, tunnel de vente, RDV en ligne, analytics et automatisations.", bullets: ["Funnels & e-mailing", "Calendrier en ligne", "Tableau de bord KPI"], }, { icon: ClipboardList, title: "Gestion administrative", desc: "Facturation, devis, relances, suivi de trésorerie et organisation documentaire.", bullets: ["Devis & factures", "Relances automatiques", "Modèles & checklists"], }, ];

const packs = [ { name: "Essentiel", price: "590€", tagline: "Idéal pour démarrer", items: [ "Landing 1 page", "Section services + contact", "Nom de domaine & e‑mail pro", "SEO technique de base", ], }, { name: "Pro", price: "1290€", highlight: true, tagline: "Le meilleur rapport impact/prix", items: [ "Site 4–6 pages (vitrine)", "Blog / Actus + SEO éditorial", "Prise de RDV en ligne", "Intégrations (Analytics, Pixel)", ], }, { name: "Business", price: "Sur devis", tagline: "Sur‑mesure & automatisations", items: [ "Espace client / devis / factures", "CRM léger + e‑mailing", "Automatisations (Zapier/Make)", "Accompagnement croissance", ], }, ];

const faqs = [ { q: "Combien de temps pour lancer mon site ?", a: "Une landing Essentiel peut être prête en 5–10 jours ouvrés selon la réactivité sur les contenus.", }, { q: "Puis‑je gérer mon site moi‑même ?", a: "Oui. Vous aurez un mini‑guide + une session de prise en main. Maintenance optionnelle.", }, { q: "Proposez‑vous la gestion administrative mensuelle ?", a: "Oui, via un forfait (relances, factures, tableaux de suivi). Paramétrage compris au départ.", }, { q: "Et pour le référencement ?", a: "SEO technique inclus. Des packs éditoriaux (mots‑clés, articles) sont disponibles en option.", }, ];

function useDarkMode() { const [dark, setDark] = useState(true); React.useEffect(() => { if (dark) document.documentElement.classList.add("dark"); else document.documentElement.classList.remove("dark"); }, [dark]); return { dark, setDark }; }

function Nav({ dark, setDark }) { const [open, setOpen] = useState(false); const links = [ { href: "#services", label: "Services" }, { href: "#method", label: "Méthode" }, { href: "#packs", label: "Packs" }, { href: "#portfolio", label: "Portfolio" }, { href: "#faq", label: "FAQ" }, { href: "#contact", label: "Contact" }, ]; return ( <header className="sticky top-0 z-50 backdrop-blur supports-[backdrop-filter]:bg-white/70 dark:supports-[backdrop-filter]:bg-zinc-950/60 border-b border-transparent"> <Section className="py-3"> <div className="flex items-center justify-between"> <a href="#top" className="flex items-center gap-2 font-bold tracking-tight text-zinc-900 dark:text-white"> <div className="h-8 w-8 rounded-xl bg-gradient-to-br from-blue-600 to-blue-800 text-white grid place-items-center"> C </div> <span>CA Gestion</span> </a> <nav className="hidden md:flex items-center gap-6 text-sm"> {links.map((l) => ( <a key={l.href} href={l.href} className="text-zinc-700 dark:text-zinc-300 hover:text-zinc-900 dark:hover:text-white"> {l.label} </a> ))} <button aria-label="Basculer le thème" onClick={() => setDark(!dark)} className="inline-flex items-center gap-2 rounded-lg px-3 py-2 ring-1 ring-zinc-300 dark:ring-zinc-700 text-zinc-700 dark:text-zinc-200" > {dark ? <Sun size={16} /> : <Moon size={16} />} </button> <a
href="#contact"
className="inline-flex items-center rounded-lg px-4 py-2 bg-blue-700 text-white hover:bg-blue-800 font-semibold"
> Devis </a> </nav> <button className="md:hidden inline-flex items-center gap-2 rounded-lg px-3 py-2 ring-1 ring-zinc-300 dark:ring-zinc-700" onClick={() => setOpen((o) => !o)} > Menu </button> </div> {open && ( <div className="md:hidden mt-3 grid gap-2"> {links.map((l) => ( <a
key={l.href}
href={l.href}
className="block rounded-lg px-4 py-2 bg-white dark:bg-zinc-900 ring-1 ring-zinc-200 dark:ring-zinc-800"
> {l.label} </a> ))} <div className="flex items-center gap-2"> <button onClick={() => setDark((d) => !d)} className="flex-1 rounded-lg px-3 py-2 ring-1 ring-zinc-300 dark:ring-zinc-700" > {dark ? "Mode clair" : "Mode sombre"} </button> <a
href="#contact"
className="flex-1 text-center rounded-lg px-3 py-2 bg-blue-700 text-white font-semibold"
> Devis </a> </div> </div> )} </Section> </header> ); }

function Hero() { return ( <Section className="pt-12 pb-16"> <div className="grid md:grid-cols-2 gap-8 items-center"> <div> <div className="flex flex-wrap gap-2 mb-4"> <Pill icon={Globe} tone="blue">CA Gestion</Pill> <Pill icon={Rocket}>Croissance</Pill> <Pill icon={ClipboardList}>Organisation</Pill> </div> <h1 className="text-3xl md:text-5xl font-extrabold tracking-tight leading-tight"> Créez un site qui vend. <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-700 to-blue-500">Gagnez du temps</span> sur l'administratif. </h1> <p className="mt-4 text-zinc-600 dark:text-zinc-300 max-w-xl"> {BRAND.tagline} Nous posons les bases rapidement (site, offres, process) puis nous améliorons ce qui compte : trafic qualifié, conversions et trésorerie. </p> <div className="mt-6 flex flex-wrap items-center gap-3"> <a
href="#contact"
className="inline-flex items-center justify-center rounded-xl px-5 py-3 font-semibold bg-blue-700 text-white hover:bg-blue-800"
> Démarrer mon projet <ArrowRight className="ml-2" size={18} /> </a> <a
href="#packs"
className="inline-flex items-center justify-center rounded-xl px-5 py-3 font-semibold ring-1 ring-inset ring-zinc-300 dark:ring-zinc-700 text-zinc-800 dark:text-zinc-200 hover:bg-zinc-50 dark:hover:bg-zinc-900"
> Voir les packs </a> </div> </div> <Card className="p-6"> <div className="aspect-video w-full rounded-xl bg-gradient-to-br from-blue-100 to-zinc-100 dark:from-blue-900/20 dark:to-zinc-800 grid place-items-center text-sm text-zinc-600 dark:text-zinc-300"> Aperçu hero / capture portfolio (remplacez par une image) </div> <ul className="mt-4 grid grid-cols-1 sm:grid-cols-2 gap-3 text-sm"> <li className="flex items-center gap-2"><Check size={16}/>Responsive & SEO‑ready</li> <li className="flex items-center gap-2"><Check size={16}/>RDV / formulaires intégrés</li> <li className="flex items-center gap-2"><Check size={16}/>Tableau de bord basique</li> <li className="flex items-center gap-2"><Check size={16}/>Évolutif (CRM, factures)</li> </ul> </Card> </div> </Section> ); }

function Services() { return ( <Section id="services" className="py-16"> <div className="flex items-center gap-3 mb-6"> <Pill icon={Globe} tone="blue">Création de site</Pill> <Pill icon={Rocket}>Développement d'activité</Pill> <Pill icon={ClipboardList}>Gestion administrative</Pill> </div> <div className="grid gap-6 md:grid-cols-3"> {features.map((f, i) => ( <motion.div key={f.title} initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ delay: i * 0.05 }} > <Card className="p-6 h-full"> <div className="flex items-center gap-3 mb-3"> <f.icon className="text-blue-700" /> <h3 className="text-lg font-semibold">{f.title}</h3> </div> <p className="text-zinc-600 dark:text-zinc-300 mb-4">{f.desc}</p> <ul className="space-y-2"> {f.bullets.map((b) => ( <li key={b} className="flex items-start gap-2 text-sm text-zinc-700 dark:text-zinc-300"> <Check size={16} className="mt-0.5" /> {b} </li> ))} </ul> </Card> </motion.div> ))} </div> </Section> ); }

function Method() { const steps = [ { title: "Audit express", desc: "30 à 45 min pour cadrer objectifs, cibles, offres et délais." }, { title: "Prototype & contenus", desc: "Wireframe + collecte textes/visuels, base SEO et promesse claire." }, { title: "Mise en ligne", desc: "Intégration, tests, SEO technique, analytics et prise en main." }, { title: "Croissance", desc: "Itérations, articles clés, funnels, suivi KPI et automatisations." }, ]; return ( <Section id="method" className="py-16"> <div className="grid md:grid-cols-2 gap-8 items-start"> <div> <Pill icon={Wrench} tone="blue">Méthode pragmatique</Pill> <h2 className="mt-3 text-2xl md:text-3xl font-bold tracking-tight">Aller à l'essentiel, livrer vite, améliorer en continu</h2> <p className="mt-3 text-zinc-600 dark:text-zinc-300"> Pas de blabla : une base solide en ligne rapidement, mesurable, puis on optimise ce qui crée réellement de la valeur (trafic qualifié, conversions, cash‑flow). </p> <ul className="mt-6 space-y-3"> {steps.map((s, i) => ( <li key={i} className="flex gap-3"> <span className="h-8 w-8 shrink-0 rounded-full bg-blue-50 text-blue-700 dark:bg-blue-900/30 dark:text-blue-200 flex items-center justify-center font-semibold"> {i + 1} </span> <div> <p className="font-semibold">{s.title}</p> <p className="text-sm text-zinc-600 dark:text-zinc-400">{s.desc}</p> </div> </li> ))} </ul> </div> <Card className="p-6"> <div className="flex items-center gap-2 mb-4"> <LineChart className="text-blue-700" /> <h3 className="font-semibold">Mini tableau de bord inclus</h3> </div> <ul className="space-y-2 text-sm text-zinc-700 dark:text-zinc-300"> <li className="flex items-center gap-2"><Check size={16}/>Suivi trafic & conversions (GA4, Pixel)</li> <li className="flex items-center gap-2"><Check size={16}/>Pages les plus performantes</li> <li className="flex items-center gap-2"><Check size={16}/>Formulaires & rendez‑vous</li> <li className="flex items-center gap-2"><Check size={16}/>Rapport mensuel (option)</li> </ul> </Card> </div> </Section> ); }

function Packs() { return ( <Section id="packs" className="py-16"> <div className="text-center mb-10"> <Pill icon={Shield} tone="blue">Transparence & résultats</Pill> <h2 className="mt-3 text-2xl md:text-3xl font-bold tracking-tight">Des packs clairs, qui posent les bases</h2> <p className="mt-2 text-zinc-600 dark:text-zinc-300">Chaque formule est conçue pour livrer du concret rapidement et évoluer avec vous.</p> </div> <div className="grid md:grid-cols-3 gap-6"> {packs.map((p) => ( <Card key={p.name} className={p-6 ${p.highlight ? "ring-2 ring-blue-700 dark:ring-blue-400" : ""}}> <div className="flex items-center justify-between"> <h3 className="text-xl font-semibold">{p.name}</h3> <span className="text-sm text-zinc-500">{p.tagline}</span> </div> <div className="mt-4 flex items-baseline gap-2"> <span className="text-3xl font-bold">{p.price}</span> {p.price !== "Sur devis" && <span className="text-sm text-zinc-500">HT</span>} </div> <ul className="mt-4 space-y-2 text-sm"> {p.items.map((i) => ( <li key={i} className="flex items-start gap-2 text-zinc-700 dark:text-zinc-300"> <Check size={16} className="mt-0.5" /> {i} </li> ))} </ul> <a
href="#contact"
className="mt-6 inline-flex w-full items-center justify-center rounded-xl px-4 py-2 bg-blue-700 text-white hover:bg-blue-800 font-semibold"
> Choisir </a> </Card> ))} </div> </Section> ); }

function Portfolio() { const items = [ { title: "Studio Yoga", tag: "Site vitrine • Réservations" }, { title: "Plombier du Coin", tag: "Local SEO • Devis" }, { title: "Boulangerie Léo", tag: "Click & Collect" }, { title: "Auto‑École 7", tag: "Formulaires • CRM léger" }, ]; return ( <Section id="portfolio" className="py-16"> <div className="flex items-center gap-3 mb-6"> <Pill icon={Globe} tone="blue">Cas concrets</Pill> <Pill icon={Languages}>Multi‑secteurs</Pill> </div> <div className="grid md:grid-cols-4 gap-6"> {items.map((it, idx) => ( <motion.div key={it.title} initial={{ opacity: 0, y: 10 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ delay: idx * 0.05 }} > <Card className="p-5 h-full"> <div className="aspect-video w-full rounded-xl bg-gradient-to-br from-zinc-200 to-zinc-100 dark:from-zinc-800 dark:to-zinc-700 mb-4" /> <p className="font-semibold">{it.title}</p> <p className="text-sm text-zinc-500">{it.tag}</p> </Card> </motion.div> ))} </div> <div className="mt-6 text-right"> <a href="#contact" className="inline-flex items-center gap-2 text-sm text-blue-700 hover:underline"> Voir un audit démo <ExternalLink size={16} /> </a> </div> </Section> ); }

function FAQ() { return ( <Section id="faq" className="py-16"> <div className="text-center mb-10"> <h2 className="text-2xl md:text-3xl font-bold tracking-tight">Questions fréquentes</h2> <p className="mt-2 text-zinc-600 dark:text-zinc-300">Si vous ne trouvez pas la réponse, écrivez‑nous directement.</p> </div> <div className="grid md:grid-cols-2 gap-6"> {faqs.map((f, i) => ( <Card key={i} className="p-6"> <p className="font-semibold mb-2">{f.q}</p> <p className="text-zinc-600 dark:text-zinc-300">{f.a}</p> </Card> ))} </div> </Section> ); }

function Contact() { const [state, setState] = useState({ name: "", email: "", phone: "", message: "", pack: "Essentiel" }); const [sent, setSent] = useState(false);

function onChange(e) { const { name, value } = e.target; setState((s) => ({ ...s, [name]: value })); }

async function onSubmit(e) { e.preventDefault(); // TODO: remplacez par votre endpoint (Next API route /api/contact) // await fetch("/api/contact", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(state) }); setTimeout(() => setSent(true), 300); }

return ( <Section id="contact" className="py-16"> <div className="grid md:grid-cols-2 gap-8 items-start"> <div> <Pill icon={Mail} tone="blue">Parlons de votre projet</Pill> <h2 className="mt-3 text-2xl md:text-3xl font-bold tracking-tight">Un brief simple. Un plan clair. Un lancement rapide.</h2> <ul className="mt-6 space-y-2 text-sm text-zinc-700 dark:text-zinc-300"> <li className="flex items-center gap-2"><Phone size={16}/> {BRAND.phone}</li> <li className="flex items-center gap-2"><Mail size={16}/> {BRAND.email}</li> </ul> <div className="mt-6 flex flex-wrap gap-2"> <Pill icon={Check}>Devis sous 24h</Pill> <Pill icon={Check}>Contrat & facture pro</Pill> <Pill icon={Check}>Support humain</Pill> </div> </div> <Card className="p-6"> {!sent ? ( <form onSubmit={onSubmit} className="grid gap-4"> <div> <label className="block text-sm mb-1">Nom</label> <input
required
name="name"
value={state.name}
onChange={onChange}
className="w-full rounded-lg border border-zinc-300 dark:border-zinc-700 bg-white dark:bg-zinc-900 px-3 py-2"
/> </div> <div className="grid grid-cols-1 md:grid-cols-2 gap-4"> <div> <label className="block text-sm mb-1">E‑mail</label> <input
required
type="email"
name="email"
value={state.email}
onChange={onChange}
className="w-full rounded-lg border border-zinc-300 dark:border-zinc-700 bg-white dark:bg-zinc-900 px-3 py-2"
/> </div> <div> <label className="block text-sm mb-1">Téléphone</label> <input
name="phone"
value={state.phone}
onChange={onChange}
className="w-full rounded-lg border border-zinc-300 dark:border-zinc-700 bg-white dark:bg-zinc-900 px-3 py-2"
/> </div> </div> <div> <label className="block text-sm mb-1">Pack souhaité</label> <select
name="pack"
value={state.pack}
onChange={onChange}
className="w-full rounded-lg border border-zinc-300 dark:border-zinc-700 bg-white dark:bg-zinc-900 px-3 py-2"
> {packs.map((p) => ( <option key={p.name}>{p.name}</option> ))} </select> </div> <div> <label className="block text-sm mb-1">Message</label> <textarea
required
name="message"
rows={4}
value={state.message}
onChange={onChange}
className="w-full rounded-lg border border-zinc-300 dark:border-zinc-700 bg-white dark:bg-zinc-900 px-3 py-2"
/> </div> <button className="rounded-xl px-4 py-2 bg-blue-700 text-white hover:bg-blue-800 font-semibold"> Envoyer ma demande </button> </form> ) : ( <div className="text-center py-8"> <h3 className="text-xl font-semibold">Merci !</h3> <p className="text-zinc-600 dark:text-zinc-300"> Votre demande a bien été enregistrée. Nous revenons vers vous très vite. </p> </div> )} </Card> </div> </Section> ); }

function Footer() { return ( <footer className="mt-12 border-t border-zinc-200 dark:border-zinc-800"> <Section className="py-10"> <div className="grid md:grid-cols-4 gap-8"> <div className="md:col-span-2"> <div className="flex items-center gap-2 font-bold tracking-tight text-zinc-900 dark:text-white"> <div className="h-8 w-8 rounded-xl bg-gradient-to-br from-blue-600 to-blue-800 text-white grid place-items-center"> C </div> <span>CA Gestion</span> </div> <p className="mt-3 text-sm text-zinc-600 dark:text-zinc-400 max-w-md"> {BRAND.tagline} </p> </div> <div> <p className="font-semibold">Services</p> <ul className="mt-3 space-y-2 text-sm text-zinc-600 dark:text-zinc-400"> <li>Création de site</li> <li>Développement d'activité</li> <li>Gestion administrative</li> </ul> </div> <div> <p className="font-semibold">Contact</p> <ul className="mt-3 space-y-2 text-sm text-zinc-600 dark:text-zinc-400"> <li>{BRAND.email}</li> <li>{BRAND.phone}</li> </ul> </div> </div> <div className="mt-8 text-xs text-zinc-500">© {new Date().getFullYear()} CA Gestion — Tous droits réservés.</div> </Section> </footer> ); }

export default function CAGestionSite() { const { dark, setDark } = useDarkMode(); return ( <div id="top" className="min-h-screen bg-zinc-50 text-zinc-900 dark:bg-zinc-950 dark:text-zinc-50"> <Nav dark={dark} setDark={setDark} /> <Hero /> <Services /> <Method /> <Packs /> <Portfolio /> <FAQ /> <Contact /> <Footer /> </div> ); }

